{
  "id": "auth",
  "name": "SaaS Password Reset",
  "goal": "Access a student account",
  "brief": "Users reset passwords via emailed token; MFA optional.",
  "guideText": "Goal: Access a student account. Scenario: A university website lets students log in using their email address and a password. If a student forgets the password, the site sends a reset link to their registered email address. There is no second factor (no SMS codes, no authenticator app).\n\nYour task: describe how a malicious person could end up inside a student’s account long enough to view private pages (e.g., profile, courses) and download materials. You do not need to assume deep software flaws; think in terms of realistic behaviour and everyday weaknesses.\n\nAssumptions:\n• The attacker knows typical student emails (e.g., firstname.lastname@university.example).\n• The student may reuse passwords across websites, and may view university mail on personal or shared devices.\n• The site may slow down or temporarily lock accounts after many wrong attempts.\n• No help from insiders; no physical tampering with servers.\n\nModel the situation as an attack tree from the goal (“Access a student account”) down to concrete actions or conditions that make it possible.",
  "gold_must_have": ["Predictable Password Reset Token", "Credential Stuffing", "No Rate Limiting on Reset"],
  "gold_low_value": ["Shoulder Surfing (mitigated by MFA)"],
  "quiz": [
    {"q":"Why is a predictable reset token dangerous?","correct":"Attackers can guess it to take over accounts","choices":["It expires fast","It uses HTTPS","Attackers can guess it to take over accounts"]}
  ]
}
