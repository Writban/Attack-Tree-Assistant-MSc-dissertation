{
  "id": "auth",
  "name": "SaaS Password Reset",
  "brief": "Users reset passwords via emailed token; MFA optional.",
  "guideHtml": "<p><strong>Goal:</strong> Get into a student account on a site that uses email+password and an emailed reset link. No 2-factor.</p><p>Think in branches: <em>OR</em> for alternative paths &mdash; <em>AND</em> when steps must both happen.</p><p><strong>Common paths:</strong></p><ul><li><em>Credential stuffing</em>: try leaked email+password pairs.</li><li><em>Password spraying</em>: try a few common passwords across many users.</li><li><em>Phishing</em>: trick a student to enter their password on a fake page.</li><li><em>Password reset + email access</em> <strong>(AND)</strong>: trigger reset <em>and</em> open the reset email (reused email password / shared device).</li><li><em>Rate-limit/lockout bypass</em> <strong>(AND)</strong>: detect limits and slow/rotate attempts.</li></ul><p><strong>Pitfalls:</strong> DDoS or SQLi on the login page do not directly achieve account access here; keep leaves concrete (one action).</p>",
  "gold_must_have": ["Predictable Password Reset Token", "Credential Stuffing", "No Rate Limiting on Reset"],
  "gold_low_value": ["Shoulder Surfing (mitigated by MFA)"],
  "quiz": [
    {"q":"Why is a predictable reset token dangerous?","correct":"Attackers can guess it to take over accounts","choices":["It expires fast","It uses HTTPS","Attackers can guess it to take over accounts"]}
  ]
}
