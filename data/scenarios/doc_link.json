{
  "brief": "Some company documents are shared as 'Anyone with the link can view'. Model how a private document link could be accessed by the wrong person.",
  "guideHtml": "<p><strong>Goal:</strong> Access a document that is shared as 'Anyone with the link can view' but was not intended for you.</p><p>Use <em>OR</em> for alternatives; <em>AND</em> when both steps are required.</p><p><strong>Common paths:</strong></p><ul><li><em>Get link from the owner</em>: phishing or social engineering.</li><li><em>Predict/find the link</em> <strong>(AND)</strong>: learn naming/path patterns <em>and</em> try likely URLs or search public code/repos for exposed links.</li><li><em>Shared device/session</em> <strong>(AND)</strong>: use a device already logged in <em>and</em> retrieve the link from history/downloads.</li></ul><p><strong>Pitfalls:</strong> Pure brute-forcing all URLs is unrealistic; keep leaves concrete and plausible.</p>",
  "gold_must_have": [
    "phishing for the link",
    "social engineering for sharing",
    "predictable link pattern + enumeration",
    "find exposed links in public repos/search",
    "use shared device/browser history"
  ],
  "gold_low_value": [
    "brute force all possible urls",
    "sql injection on docs site",
    "dos the file server"
  ],
  "aliases": {
    "ask for link": "social engineering for sharing",
    "phish link": "phishing for the link",
    "guessable url": "predictable link pattern + enumeration",
    "search leaked links": "find exposed links in public repos/search",
    "borrow unlocked laptop": "use shared device/browser history"
  }
}
